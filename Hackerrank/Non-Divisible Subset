def nonDivisibleSubset(k, S):
    # Count remainders
    remainder_count = [0] * k
    for num in S:
        remainder_count[num % k] += 1

    # Start with remainder 0 (only one can be chosen if exists)
    result = min(remainder_count[0], 1)

    # Handle pairs of remainders
    for r in range(1, (k // 2) + 1):
        if r == k - r:  # special case: r == k/2
            result += 1
        else:
            result += max(remainder_count[r], remainder_count[k - r])

    return result
